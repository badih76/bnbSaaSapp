// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
}

model User {
  id String @id @unique

  email String
  firstName String
  lastName String
  profileImage String?
  
  Home Home[]
  Favorites Favorites[]
  Resevations Reservations[]
  
}

model Home {
  id String @id @default(uuid())

  title String?
  description String?
  guests String?
  bedrooms String?
  bathrooms String?
  country String?
  address String?
  photo String?
  price Float?

  categoryName String?
    
  addedCategory Boolean @default(false)
  addedDescription Boolean @default(false)
  addedLocation Boolean @default(false)
  
  createdAT DateTime @default(now())

  Reservations Reservations[]
  User User? @relation(fields: [userId], references: [id])
  Favorites Favorites[]
  userId String?
}

model Favorites {
  id String @id @default(uuid())

  User User? @relation(fields: [userId], references: [id])
  userId String
  Home Home? @relation(fields: [homeId], references: [id])
  homeId String

  createdAt DateTime @default(now())
}

model Reservations {
  id String @id @default(uuid())

  startDate DateTime
  endDate DateTime
  createdAt DateTime @default(now())



  User User? @relation(fields: [userId], references: [id])
  userId String

  Home Home? @relation(fields: [homeId], references: [id])
  homeId String
}